name: Deployment Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
      image_digest: ${{ steps.build.outputs.digest }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha
    
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'staging'
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        echo "Image: ${{ needs.build.outputs.image_tag }}"
        
        # Simulate deployment
        echo "âœ… Staging deployment completed"
    
    - name: Run health checks
      run: |
        echo "Running health checks..."
        
        # Simulate health checks
        sleep 10
        echo "âœ… Health checks passed"
    
    - name: Run integration tests
      run: |
        echo "Running integration tests..."
        
        # Simulate integration tests
        echo "âœ… Integration tests passed"

  deploy-production:
    needs: [build, deploy-staging]
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        echo "Image: ${{ needs.build.outputs.image_tag }}"
        
        # Simulate production deployment
        echo "âœ… Production deployment completed"
    
    - name: Run production health checks
      run: |
        echo "Running production health checks..."
        
        # Simulate production health checks
        sleep 15
        echo "âœ… Production health checks passed"
    
    - name: Notify deployment
      run: |
        echo "ðŸš€ Production deployment successful!"
        echo "Version: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"

  rollback:
    if: failure()
    needs: [deploy-staging, deploy-production]
    runs-on: ubuntu-latest
    
    steps:
    - name: Rollback deployment
      run: |
        echo "ðŸ”„ Rolling back deployment due to failure..."
        
        # Simulate rollback
        echo "âœ… Rollback completed"
